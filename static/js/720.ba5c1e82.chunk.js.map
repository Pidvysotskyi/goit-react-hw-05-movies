{"version":3,"file":"static/js/720.ba5c1e82.chunk.js","mappings":"oNAGaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,2F,SCCJE,EAAe,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAC/BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACP,EAAD,CAAMQ,GAAE,kBAAaJ,GAAUK,MAAO,CAAEC,KAAMJ,GAA9C,SACGD,GAGN,ECTYM,EAAOV,EAAAA,GAAAA,GAAH,0HAQJW,EAAUX,EAAAA,GAAAA,GAAH,kFCiBpB,EAvBiB,SAAC,GAAe,IAAbY,EAAY,EAAZA,MAClB,OACE,SAACF,EAAD,UACGE,EAAMC,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,eAChB,OACE,SAACJ,EAAD,WACE,SAACT,EAAD,CAAcC,OAAQW,EAAIV,KAAMW,KADpBD,EAIjB,KAGN,C,iHCdYE,GAAahB,EAAAA,EAAAA,IAAOiB,EAAAA,GAAPjB,CAAH,wEAMVkB,GAAclB,EAAAA,EAAAA,IAAOmB,EAAAA,GAAPnB,CAAH,4C,SCqBxB,EAzBmB,SAAC,GAAkB,IAAhBoB,EAAe,EAAfA,SACpB,OACE,SAAC,KAAD,CACEC,cAAe,CACbC,MAAO,IAETC,SAAU,cAA+B,IAA5BD,EAA2B,EAA3BA,MAAWE,EAAgB,EAAhBA,UACtBJ,EAASE,GACTE,GACD,EAPH,UASE,UAACR,EAAD,YACE,4BACE,SAACE,EAAD,CAAaO,KAAK,OAAOrB,KAAK,aAEhC,mBAAQqB,KAAK,SAAb,wBAIP,E,sDCrBYC,EAAe1B,EAAAA,GAAAA,EAAH,oFCyDzB,EAlDe,WACb,OAAwC2B,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOlB,EAAP,KAAcmB,EAAd,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOR,EAAP,KAAcU,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,EAAWP,EAAaQ,IAAI,UAElCC,EAAAA,EAAAA,YAAU,WAENL,EADEG,GAIK,GACV,GAAE,CAACA,KAEJE,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVf,EAGF,OAFAY,EAAU,aACVH,EAAS,IAGXG,EAAU,YACVI,EAAAA,EAAAA,IAAWhB,GACRiB,MAAK,SAAAC,GACJT,EAASS,EACV,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,SAAQ,WACPX,EAAU,OACX,GACJ,GAAE,CAACZ,IAOJ,OACE,UAACwB,EAAA,EAAD,CAAKC,GAAG,OAAR,WACE,SAAC,EAAD,CAAY3B,SAPK,SAAA4B,GACnBnB,EAAgB,CAAEP,MAAO0B,IACzBhB,EAASgB,EACV,IAKqB,IAAjBpC,EAAMqC,QAA2B,SAAXhB,GACrB,SAACP,EAAD,wDAEA,SAACwB,EAAA,EAAD,CAAUtC,MAAOA,IAEP,YAAXqB,IAAwB,SAAC,KAAD,MAG9B,C,mKCvDKkB,EAAU,mCAET,SAASC,IACd,OAAOC,EAAAA,EAAAA,IAAA,kEAC2DF,IAC/DZ,MAAK,SAAAe,GAAQ,OAAIA,EAASd,KAAKe,OAAlB,GACjB,CACM,SAASjB,EAAWhB,GACzB,OAAO+B,EAAAA,EAAAA,IAAA,4DAEkDF,EAFlD,4DAE6G7B,IAEjHiB,MAAK,SAAAe,GAAQ,OAAIA,EAASd,KAAKe,OAAlB,GACjB,CACM,SAASC,EAAgBC,GAC9B,OAAOJ,EAAAA,EAAAA,IAAA,6CAEmCI,EAFnC,oBAEsDN,EAFtD,oBAIJZ,MAAK,SAAAe,GAAQ,OAAIA,EAASd,IAAb,GACjB,CACM,SAASkB,EAAgBD,GAC9B,OAAOJ,EAAAA,EAAAA,IAAA,6CAEmCI,EAFnC,4BAE8DN,EAF9D,oBAIJZ,MAAK,SAAAe,GAAQ,OAAIA,EAASd,IAAb,GACjB,CACM,SAASmB,EAAgBF,GAC9B,OAAOJ,EAAAA,EAAAA,IAAA,6CAEmCI,EAFnC,4BAE8DN,EAF9D,2BAIJZ,MAAK,SAAAe,GAAQ,OAAIA,EAASd,KAAKe,OAAlB,GACjB,C","sources":["components/FilmListItem/FilmListItem.styled.jsx","components/FilmListItem/FilmListItem.jsx","components/FilmList/FilmList.styled.jsx","components/FilmList/FilmList.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","utils/Backend_API.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: darkblue;\n  font-weight: 500;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Link } from './FilmListItem.styled';\nimport PropTypes from 'prop-types';\n\nexport const FilmListItem = ({ filmId, name }) => {\n  const location = useLocation();\n  return (\n    <Link to={`/movies/${filmId}`} state={{ from: location }}>\n      {name}\n    </Link>\n  );\n};\n\nFilmListItem.propTypes = {\n  filmId: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const LisItem = styled.li`\n  width: 40%;\n  display: inline-block;\n  padding: 4px;\n`;\n","import { FilmListItem } from 'components/FilmListItem/FilmListItem';\nimport PropTypes from 'prop-types';\nimport { List, LisItem } from './FilmList.styled';\n\nconst FilmList = ({ films }) => {\n  return (\n    <List>\n      {films.map(({ id, original_title }) => {\n        return (\n          <LisItem key={id}>\n            <FilmListItem filmId={id} name={original_title} />\n          </LisItem>\n        );\n      })}\n    </List>\n  );\n};\n\nFilmList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default FilmList;\n","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\nexport const StyledForm = styled(Form)`\n  padding: 8px;\n  display: flex;\n  gap: 4px;\n`;\n\nexport const StyledField = styled(Field)`\n  font-size: 20px;\n`;\n","import { Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport { StyledForm, StyledField } from './SearchForm.styled';\n\nconst SearchForm = ({ onSearch }) => {\n  return (\n    <Formik\n      initialValues={{\n        query: '',\n      }}\n      onSubmit={({ query }, { resetForm }) => {\n        onSearch(query);\n        resetForm();\n      }}\n    >\n      <StyledForm>\n        <label>\n          <StyledField type=\"text\" name=\"query\" />\n        </label>\n        <button type=\"submit\">Search</button>\n      </StyledForm>\n    </Formik>\n  );\n};\n\nSearchForm.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import styled from 'styled-components';\n\nexport const QueryMessage = styled.p`\n  color: #9e0101;\n  font-size: 20px;\n  font-weight: 700;\n`;\n","import SearchForm from 'components/SearchForm/SearchForm';\nimport { useState, useEffect } from 'react';\nimport FilmList from 'components/FilmList/FilmList';\nimport { getByQuery } from 'utils/Backend_API';\nimport { useSearchParams } from 'react-router-dom';\nimport { MagnifyingGlass } from 'react-loader-spinner';\nimport { Box } from 'components/Box';\nimport { QueryMessage } from './Movies.styled';\n\nconst Movies = () => {\n  const [searchParams, setSerachParams] = useSearchParams();\n  const [films, setFilms] = useState([]);\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState('idle');\n  const urlQuery = searchParams.get('query');\n\n  useEffect(() => {\n    if (urlQuery) {\n      setQuery(urlQuery);\n      return;\n    }\n    setQuery('');\n  }, [urlQuery]);\n\n  useEffect(() => {\n    if (query === '') {\n      setStatus('idle');\n      setFilms([]);\n      return;\n    }\n    setStatus('pending');\n    getByQuery(query)\n      .then(data => {\n        setFilms(data);\n      })\n      .catch(error => console.log(error))\n      .finally(() => {\n        setStatus('done');\n      });\n  }, [query]);\n\n  const handleSearch = serachQuery => {\n    setSerachParams({ query: serachQuery });\n    setQuery(serachQuery);\n  };\n\n  return (\n    <Box pl=\"20px\">\n      <SearchForm onSearch={handleSearch} />\n      {films.length === 0 && status === 'done' ? (\n        <QueryMessage>There are no movies found for your query</QueryMessage>\n      ) : (\n        <FilmList films={films} />\n      )}\n      {status === 'pending' && <MagnifyingGlass />}\n    </Box>\n  );\n};\n\nexport default Movies;\n","import axios from \"axios\";\n\nconst API_KEY = \"957ce6bf29368070d7b55378b1d4459e\";\n\nexport function getTrending() {\n  return axios\n    .get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data.results);\n}\nexport function getByQuery(query) {\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n    )\n    .then(response => response.data.results);\n}\nexport function getMovieDetails(movieId) {\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    )\n    .then(response => response.data);\n}\nexport function getMovieCredits(movieId) {\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    )\n    .then(response => response.data);\n}\nexport function getMovieReviews(movieId) {\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .then(response => response.data.results);\n}\n"],"names":["Link","styled","NavLink","FilmListItem","filmId","name","location","useLocation","to","state","from","List","LisItem","films","map","id","original_title","StyledForm","Form","StyledField","Field","onSearch","initialValues","query","onSubmit","resetForm","type","QueryMessage","useSearchParams","searchParams","setSerachParams","useState","setFilms","setQuery","status","setStatus","urlQuery","get","useEffect","getByQuery","then","data","catch","error","console","log","finally","Box","pl","serachQuery","length","FilmList","API_KEY","getTrending","axios","response","results","getMovieDetails","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}